<Modal
                    transparent={true}
                    visible={eventModal}
                  >
                    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
                      <View style={{ height: '80%', width: '95%', backgroundColor: 'grey', borderRadius: 30 }}>
                        <View style={styles.mainContainer}>


                          {
                            <Image
                              source={
                                item.profileImage == '' ? (require('../Images/user.png'))
                                  :
                                  { uri: item.profileImage }
                              }
                              style={styles.userImage}
                            />
                          }

                          <Text style={styles.userName}>{item.name}</Text>

                        </View>
                        <View>
                          <Text style={{ color: 'white', marginLeft: 20 }}>
                            {item.caption}</Text>
                        </View>
                        <View >
                          <Image source={{ uri: item.img }}
                            style={[styles.postImage, { width: '95%', height: '65%' }]}
                          />
                        </View>
                        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', marginBottom: 140 }}>
                          <View style={[styles.detailBox]}>
                            {
                              totalEventMembersJoined !== null ? <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                Memebers Joined : {totalEventMembersJoined}
                              </Text> :
                                <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                  Memebers Joined : 0
                                </Text>
                            }
                          </View>
                          <View style={[styles.detailBox]}>
                            {
                              eventName !== null ? <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                Event Name : {eventName}
                              </Text> :
                                <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                  Memebers Joined : Not Mentioned
                                </Text>
                            }
                          </View>
                          <View style={[styles.detailBox]}>

                            <TouchableOpacity style={{ flexDirection: 'row' }}
                            // onPress={() => item.likes == UserId ? onPostDislike(item) : onPostLiked(item)}
                            >
                              {
                                totalEventMembers !== null ? <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                  Total Memebers : {totalEventMembers}
                                </Text> :
                                  <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}>
                                    Total Memebers : Not Mentioned
                                  </Text>
                              }
                              {/* <Text style={{ marginRight: 20, fontSize: 16, fontWeight: '500' }}> */}
                              {/* { commented later} */}
                              {/* {item.likes.length} */}
                              {/* Memebers Joined : {totalEventMembers} */}
                              {/* </Text> */}

                              {/* {
                     item.likes == null ?
                       (<Image source={require('../Images/heartOn.png')}
                         style={{ width: 24, height: 24 }}
                       />)
                       :
                       (<Image source={require('../Images/heart.png')}
                         style={{ width: 24, height: 24 }}
                       />)

                   } */}

                              {/* {
                 getLikeStatus(item.likes) == true
                 // likeButton === true
                 ?
                 (
                   <Image source={require('../Images/heartOn.png')}
                   style={{width:24, height:24}}
                   />
                 )
                 :( 
                   <Image source={require('../Images/heart.png')}
                   style={{width:24, height:24}}
                   /> 
                    ) 
                 }  */}
                              {/* {
                  isLiked===true ? 
                  <Image source={require('../Images/heartOn.png')}
                  style={{width:24, height:24}}/>
                  :
                  <Image source={require('../Images/heart.png')}
                  style={{width:24, height:24}}
                  />
                 } */}
                            </TouchableOpacity>
                          </View>
                          <View style={[styles.detailBox, { marginBottom: 20, justifyContent: 'space-evenly' }]}>
                            <TouchableOpacity onPress={() => { setEventModal(false) }}>
                              <View
                                style={{
                                  height: 30, borderRadius: 12, width: 100, borderWidth: 1,
                                  borderColor: 'black', backgroundColor: 'blue'
                                }}
                              >
                                <Text style={{ marginTop: 3, alignSelf: 'center', color: 'white' }}>View Later</Text>
                              </View>
                            </TouchableOpacity>

                            {item.userId !== myUserId ?
                              <TouchableOpacity style={{ flexDirection: 'row' }}
                                onPress={() => JoinEventFtn(item)}
                              >
                                {/* <Text style={{ marginRight: 20 }}>0</Text> */}
                                <View
                                  style={{
                                    height: 30, borderRadius: 12, width: 100, borderWidth: 1,
                                    borderColor: 'black', backgroundColor: 'blue'
                                  }}
                                >

                                  <Text
                                    style={{ marginTop: 3, alignSelf: 'center', color: 'white' }}>
                                    Join Event
                                  </Text>


                                </View>
                              </TouchableOpacity>
                              :
                              <Text
                                style={{ marginTop: 3, alignSelf: 'center', color: 'white' }}>
                                My Event
                              </Text>
                            }
                          </View>

                        </View>
                      </View>
                    </View>

                  </Modal>


                  <TouchableOpacity onPress={() => showNotificaiton()}>
          <View style={{flex:1, flexDirection: 'row', flexWrap:'wrap' }}>
            <Image source={require('../Images/notification.png')}
              style={{ width: 24, height: 24, marginBottom:15, marginTop:10,marginLeft: 115,
               tintColor: eventNotificationCount > 0 ?'red':'black', alignSelf: 'flex-end' }}
            />
            <View style={{flex:1, flexWrap:'wrap', backgroundColor:'red', width:50, height:50}}>
              {/* <View style={{ backgroundColor:'red', width:30, height:30, position:'absolute', marginTop:10}}> */}
              <Text
              style={{ fontSize: 25, fontWeight: '700', marginRight: 10, marginTop:10,
               color: eventNotificationCount > 0 ? 'red' : 'black', position:'absolute'}}>
              {
                eventNotificationCount > 0 ? eventNotificationCount : null
              }
            </Text>
              {/* </View> */}
            </View>
          </View>
        </TouchableOpacity>

        /////////////image Modal

                <Modal
                  visible={imageFullModal}
                  onRequestClose={() => setImageFullModal(false)}
                >
                  <View style={{ backgroundColor: 'black', height: '100%', width: '100%' }}>
                    <ScrollView
                      horizontal={true}
                      pagingEnabled
                      decelerationRate={1}
                    // style={{ width: '100%', height: '40%' }}
                    >
                      {
                        //        myPhotos.length ?

                        myPhotos.

                          // splice(0).reverse().
                          map((photos, index) => {
                            return (
                              <View key={clickedIndex}
                              >
                                {/* <Text style={{fontSize:20, color:'black'}}>scrollh </Text> */}
                                {/* <Image source={{ uri: photos }}
                                style={{ height: 300, width: '95%', margin: 5, borderWidth: 1, borderColor: 'black', borderRadius: 10 }}
                              /> */}
                                <Text style={{ color: 'white', fontSize: 18, margin: 10 }}>{clickedIndex}</Text>
                                <Image source={{ uri: photos[clickedIndex].value }}
                                  style={{
                                    height: Dimensions.get('window').height,
                                    width: Dimensions.get('window').width, resizeMode: 'contain'
                                  }}
                                />
                              </View>

                            );
                          })
                          .reverse()

                        // :
                        // <Text
                        //   style={{ fontSize: 20, alignSelf: 'center', fontWeight: '500', color: 'black', marginBottom: 30 }}>No Photos to show </Text>
                      }
                    </ScrollView>
                  </View>
                </Modal>